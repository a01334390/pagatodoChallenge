//
// Generated by CocoaPods-Keys
// on 21/05/2020
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PagatodoChallengeKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PagatodoChallengeKeys

  @dynamic pagatodoURL;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PagatodoChallengeKeys *, SEL) = NULL;

  if ([key isEqualToString:@"pagatodoURL"]) {
    implementation = _podKeys5684d1cc960fda436cf45df7756c416f;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys5684d1cc960fda436cf45df7756c416f(PagatodoChallengeKeys *self, SEL _cmd)
{
  
    
      char cString[50] = { PagatodoChallengeKeysData[457], PagatodoChallengeKeysData[442], PagatodoChallengeKeysData[586], PagatodoChallengeKeysData[262], PagatodoChallengeKeysData[514], PagatodoChallengeKeysData[133], PagatodoChallengeKeysData[789], PagatodoChallengeKeysData[950], PagatodoChallengeKeysData[546], PagatodoChallengeKeysData[1235], PagatodoChallengeKeysData[1039], PagatodoChallengeKeysData[1018], PagatodoChallengeKeysData[600], PagatodoChallengeKeysData[369], PagatodoChallengeKeysData[49], PagatodoChallengeKeysData[504], PagatodoChallengeKeysData[513], PagatodoChallengeKeysData[404], PagatodoChallengeKeysData[732], PagatodoChallengeKeysData[22], PagatodoChallengeKeysData[1092], PagatodoChallengeKeysData[48], PagatodoChallengeKeysData[1238], PagatodoChallengeKeysData[257], PagatodoChallengeKeysData[152], PagatodoChallengeKeysData[581], PagatodoChallengeKeysData[530], PagatodoChallengeKeysData[1025], PagatodoChallengeKeysData[651], PagatodoChallengeKeysData[1207], PagatodoChallengeKeysData[587], PagatodoChallengeKeysData[1112], PagatodoChallengeKeysData[358], PagatodoChallengeKeysData[1090], PagatodoChallengeKeysData[376], PagatodoChallengeKeysData[866], PagatodoChallengeKeysData[397], PagatodoChallengeKeysData[8], PagatodoChallengeKeysData[1145], PagatodoChallengeKeysData[185], PagatodoChallengeKeysData[239], PagatodoChallengeKeysData[211], PagatodoChallengeKeysData[1230], PagatodoChallengeKeysData[283], PagatodoChallengeKeysData[1024], PagatodoChallengeKeysData[626], PagatodoChallengeKeysData[1303], PagatodoChallengeKeysData[1043], PagatodoChallengeKeysData[201], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PagatodoChallengeKeysData[1310] = "xXi3OJxVdoN0XvlJPXyV3y.pueCfg4FrbRGETknwncFMYUmSooRJ+pQiiXcB+NyqzldFCIhAB997O9pYfVuCVZ9MizyYWzwnxpyCYMt8g1P19vOGxX6xMfHTqohScgyV1Yi5u:8N+BbgbaUPGlwO/mfG/whgdO14YPhzwRwkNJFxyvDDV44zsyXwp33O34U1Vfsm4aWPx9R2xYFXc2G5Xm6cEzWnAoPHr15Gz1eZ2cJ+X3U7Di+mlQmNIMUvBlyfeb7Jr3peCalgvzly8LHYnbDyFmU30Y8p/Ut65YkG5mbIZos58CxxTOBJCcA7xzplGFUC71MfUy6QIuDdqRvodzhrFzIRl4QQNbb8Gze3VuM6N6CzesxNiJX68ClPwkT5aywVHwuj0mJVi31in1u9iv4IhC+lz9rRnICYKAHkwHTLWRt7QDRdzfV43WtVJ+k4vZrNrPQ28h+IviH5YTKOGw2PkBNdYWdzHKIdebqD5KylSFWU3oV65fmsnbJnAnUH9bs409Q/Ps1GD26x2ieyJlaJCQFJb75ycJa9/p9XWy2U3r605Lm3gaJe0qylb9FXgjTfg58zGctacd4a2PqH5P5pjkaALkr/xwnrli7TlxW3TIgjahc4yF6y/JpvXQ0vRNY0PeWHoP12lgi5sXLNWKMGwan42AK18DtkZXzTPUHgkSqHBQ/5L7qF4bWgRvfe1BUOauMkWoNzG5up7nBVkMdzO1WEnHZt2ZlK0CmsRpIscvz6xwh9ZxvI4cTJasXKImN4iRD/Mph0EsZyjnekb/wRsE8r5UL7Mxp61dqlIExZ2FM4ClOYv1sMU3QYw2SFYR71trEuCS1g/+IqkOEv2Mma5QoeF/wDLpbcuFtlwo9S1sjyjEWnTGxRNF+3NCct54vfUCuS4RfGIebfEzs+fVuA4tHVCDUro+cv9gsGY1oien5lj6CKF9/DyRLEva6U7c9Nx+Zn0+poaQeyKt9R+8o99CI5Bc+nw8FyXOs/PAGNBSd1GEWSM3dWTd.H2wgs3afidsVnp7N6widi9U28Zi066hCpmdBvKnXw9jfa5Imq/3FzNfgewMnxkp9cec6a9M99iKKksxVgdWKaoWy7WYvk3QZ2jpRSac1FvH5azMcrEzjg+FWYJxu8C5f2m6w+MlYVEKMHFmH5y9yphKhxzW64rAGuWhB+9dQuZ9z2qsMwmxpQabpUgJJf2N2VOwpiH52Y+N/YEBIsBU2Us9/pkd/wUXdL2eqwT1FejSs7TqycGImFUMUguS28aG5mD5lWnaVPB5VbsTYK/9FmnrhWBO5aRbI=\\\"";

- (NSString *)description
{
  return [@{
            @"pagatodoURL": self.pagatodoURL,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
